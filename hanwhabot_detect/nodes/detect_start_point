#!/usr/bin/env python
from __future__ import print_function
import rospy
import numpy as np
import cv2
from cv_bridge import CvBridge
from std_msgs.msg import UInt8, Float64
from sensor_msgs.msg import Image, CompressedImage
from hanwhabot_msgs.srv import *

class DetectStartEnd(object):
    """sub image and cal white fraction num of image.
       if it over 640x480 - 10000. then send signal
    """
    
    def __init__(self):
        self.sub_image = rospy.Subscriber("image", Image, self.CalFractionNum, queue_size=1)
        self.sub_text = rospy.Subscriber("number", UInt8, self.test_cb, queue_size=5)
        self.srv_signal = False
        self.cvbridge = CvBridge()
        

    def CalFractionNum(self, img):
        self.cv_img = self.cvbridge.imgmsg_to_cv2(img, desired_encoding="passthrough")
        self.gray_img = cv2.cvtColor(self.cv_img, cv2.COLOR_BGR2GRAY)
        self.filtered_img = cv2.threshold(self.gray_img, 127, 255, cv2.THRESH_BINARY)
        self.fraction_num = np.count_nonzero(self.filtered_img)
        
        # fraction num need to be calculated by experiment
        if self.fraction_num > 0 :
            rospy.wait_for_service('service_name')
            try:
                sign = rospy.ServiceProxy('service_name', StartSignal)
                ret = sign(self.srv_signal)
                print(ret.success)
                self.srv_signal = True

            except:
                pass


    def spin(self):
        rospy.spin()

if __name__ == "__main__":
    rospy.init_node("detect_start_end_point")
    detector = DetectStartEnd()
    detector.spin()



